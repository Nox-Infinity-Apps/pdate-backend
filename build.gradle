plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.netflix.dgs.codegen' version '6.2.1'
    id "com.moowork.node" version "1.3.1"
}

bootJar {
    mainClass.set('com.noxinfinity.pdating.GcgvApplication')
    archiveFileName = 'pdate.jar'
}

group = 'com.noxinfinity.pdating'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.github.wimdeblauwe:htmx-spring-boot:3.5.0'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

generateJava {
    schemaPaths = ["${projectDir}/modules/application//src/main/resources/graphql-client"]
    packageName = 'com.noxinfinity.pdating.codegen'
    generateClient = true
}

tasks.named('test') {
    useJUnitPlatform()
}


