extend type Query {
    getUserInfo: UserInfoResponse!
}

union UserInfoResponse = UserInfoSuccessResponse | UserInfoFailedResponse

type UserInfoFailedResponse implements ResponseBase{
    status: StatusEnum!
    message: String!
}

type UserInfoSuccessResponse implements ResponseBase{
    message: String!
    status: StatusEnum!
    data: UserData
}

type UserData {
    userId: String!
    email: String!
    fullName: String!
    avatar: String
    provider: String!
    fcmNotificationToken: String
    dob : String
    bio : String
    major : Major
    grade : Grade
    location : Location
    hobbies : [Hobbies]
    pictures : [Pics]
}

type Major {
    id : Int
    name : String
    iconUrl : String
}
type Grade{
    id : Int
    name : String
}
type Location {
    id : Int
    lat : String
    lng : String
}
type Hobbies {
    id : Int
    title : String
    iconUrl : String
}
type Pics{
    id : Int
    url : String
}
type Likes{
    id : Int
    currentUserId : String
    targetUserId : String
}

